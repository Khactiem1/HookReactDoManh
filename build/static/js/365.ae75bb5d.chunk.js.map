{"version":3,"file":"static/js/365.ae75bb5d.chunk.js","mappings":"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","sources":["Components/Modal/Modal.tsx","Components/Modal/ModalConfirm.tsx","Components/Pagination/Pagination.tsx","Components/Skeleton/Skeleton.tsx","Components/Input/Checkbox.tsx","Components/Table/Table.tsx","Types/Filter.type.ts","Pages/Product/Product.tsx","Api/Product.api.ts","Customs/Debounce.ts"],"sourcesContent":["import React from \"react\";\r\nimport { Product } from \"../../Types/Products.type\";\r\ninterface Props {\r\n  // handleOnchangeInput: any;\r\n  // handleAgreeModal: any;\r\n  // isModal: any;\r\n  // handleCancelModal: any;\r\n  // setFormData: any;\r\n  // formData: Product;\r\n  children: any;\r\n}\r\nconst Modal: React.FC<Props> = ({\r\n  // isModal,\r\n  // handleCancelModal,\r\n  // handleOnchangeInput,\r\n  // handleAgreeModal,\r\n  // formData,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"relative z-10\"\r\n      aria-labelledby=\"modal-title\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n    >\r\n      <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n        <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\r\n          <div className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-5xl\">\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n              {children}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","interface Props {\r\n  handleAgreeModalConfirm: any;\r\n  handleCancelModalConfirm: any;\r\n  question: string;\r\n}\r\nconst ModalConfirm: React.FC<Props> = ({\r\n  handleAgreeModalConfirm,\r\n  handleCancelModalConfirm,\r\n  question,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"relative z-10\"\r\n      aria-labelledby=\"modal-title\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n    >\r\n      <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n        <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\r\n          <div className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-2xl\">\r\n            <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n              <div className=\"p-6 text-center\">\r\n                <h2 className=\"mb-5 text-2xl font-normal text-gray-500 dark:text-gray-400\">\r\n                  {question}\r\n                </h2>\r\n                <button\r\n                  onClick={() => {\r\n                    handleAgreeModalConfirm();\r\n                  }}\r\n                  className=\"text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2\"\r\n                >\r\n                  Yes\r\n                </button>\r\n                <button\r\n                  onClick={(e) => {\r\n                    handleCancelModalConfirm();\r\n                  }}\r\n                  className=\"text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600\"\r\n                >\r\n                  No\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ModalConfirm;\r\n","import React, { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\n// import { Filter } from \"../../Api/Product.api\";\r\nconst limit = [5, 10, 20, 50, 100];\r\ninterface Props {\r\n  totalPage: number; // tổng trang\r\n  page: number; // trang hiện tại\r\n  filter: any;\r\n  setFilter: any;\r\n}\r\nconst Pagination: React.FC<Props> = ({\r\n  totalPage,\r\n  page,\r\n  filter,\r\n  setFilter,\r\n}) => {\r\n  // map phân trang\r\n  const arrPage = new Array();\r\n  Array(totalPage)\r\n    .fill(0)\r\n    .forEach((_, indx) => arrPage.push(indx + 1));\r\n  const arrPageNew = arrPage.slice(0, 1);\r\n  // hàm xử lý\r\n  const handleChangePage = (page: number) => {\r\n    setFilter((prev: any) => ({ ...prev, v_Page: page }));\r\n  };\r\n  const handleNextPage = () => {\r\n    setFilter((prev: any) => ({ ...prev, v_Page: filter.v_Page + 1 }));\r\n  };\r\n  const handlePrevPage = () => {\r\n    setFilter((prev: any) => ({ ...prev, v_Page: filter.v_Page - 1 }));\r\n  };\r\n  const handleChangeLimit = (e: any) => {\r\n    setFilter((prev: any) => ({ ...prev, v_Page: 1, v_Size: e.target.value }));\r\n  };\r\n  return (\r\n    <div className=\"mt-6 flex justify-center items-center\">\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"inline-flex -space-x-px\">\r\n          <li>\r\n            {page === 1 ? (\r\n              <span className=\"cursor-not-allowed rounded-l-lg border border-gray-300 bg-white py-2 px-3 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\">\r\n                Previous\r\n              </span>\r\n            ) : (\r\n              <span\r\n                onClick={() => handlePrevPage()}\r\n                className=\"rounded-l-lg border cursor-pointer border-gray-300 bg-white py-2 px-3 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\r\n              >\r\n                Previous\r\n              </span>\r\n            )}\r\n          </li>\r\n          {arrPageNew.map((pageNumber, indx) => {\r\n            const isActive = pageNumber === page;\r\n            return (\r\n              <li key={pageNumber}>\r\n                <a\r\n                  onClick={() => handleChangePage(pageNumber)}\r\n                  // className={classNames(\r\n                  //   \"border border-gray-300 py-2 px-3 leading-tight cursor-pointer hover:bg-gray-100  hover:text-gray-700\",\r\n                  //   {\r\n                  //     \"bg-gray-300 text-gray-700\": isActive,\r\n                  //     \"bg-white text-gray-500\": !isActive,\r\n                  //   }\r\n                  // )}\r\n                  className=\"border bg-gray-100 text-gray-500 border-gray-300 py-2 px-3 leading-tight cursor-pointer hover:bg-gray-100  hover:text-gray-700\"\r\n                >\r\n                  {page}\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n          <li>\r\n            {page === totalPage ? (\r\n              <span className=\"cursor-not-allowed rounded-r-lg border border-gray-300 bg-white py-2 px-3 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\">\r\n                Next\r\n              </span>\r\n            ) : (\r\n              <span\r\n                onClick={() => handleNextPage()}\r\n                className=\"rounded-r-lg border cursor-pointer border-gray-300 bg-white py-2 px-3 leading-tight text-gray-500 hover:bg-gray-100 hover:text-gray-700 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\r\n              >\r\n                Next\r\n              </span>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div>\r\n        <select\r\n          onChange={(e) => handleChangeLimit(e)}\r\n          id=\"limit\"\r\n          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n        >\r\n          {limit.map((limit) => {\r\n            return (\r\n              <option key={limit} value={limit}>\r\n                {limit}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n      <p style={{ margin: \"0 10px\" }}>\r\n        Page {page} in {totalPage} page\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst SkeletonDefault: React.FC = () => {\r\n  return (\r\n    <div role=\"status\" className=\"mt-6 animate-pulse\">\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10 rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      <div className=\"mb-2.5 h-10  rounded bg-gray-200 dark:bg-gray-700\" />\r\n      {/* <span>Loading...</span> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SkeletonDefault };\r\n","import React from \"react\";\r\ninterface Props {\r\n  name?: string;\r\n  checked: any;\r\n  handleChangeCheckBox: any;\r\n  rowData?: {};\r\n}\r\nconst Checkbox: React.FC<Props> = ({\r\n  name,\r\n  checked,\r\n  rowData,\r\n  handleChangeCheckBox,\r\n}) => {\r\n  return (\r\n    <input\r\n      type=\"checkbox\"\r\n      name={name}\r\n      checked={checked}\r\n      onChange={(e) => handleChangeCheckBox(e, rowData)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { Fragment } from \"react\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport Checkbox from \"../Input/Checkbox\";\r\ninterface Props {\r\n  rowData: [];\r\n  columns: any[];\r\n  handleOpenModalConfirm: any;\r\n  handleOpenModal: any;\r\n  handleChangeCheckBox: any;\r\n}\r\nconst Table: React.FC<Props> = ({\r\n  rowData,\r\n  columns,\r\n  handleOpenModalConfirm,\r\n  handleOpenModal,\r\n  handleChangeCheckBox,\r\n}) => {\r\n  // // xử lý thay dổi checkbox\r\n  // const handleChangeCheckBox = (\r\n  //   e: React.ChangeEvent<HTMLInputElement>,\r\n  //   row: any\r\n  // ) => {\r\n  //   const { name, checked } = e.target;\r\n  //   if (name === \"checkboxall\") {\r\n  //     const rowSelection = rowData.map((item: any) => ({\r\n  //       ...item,\r\n  //       isChecked: checked,\r\n  //     }));\r\n  //     setRowData(rowSelection);\r\n  //     const listId = rowSelection\r\n  //       .filter((item: any) => item?.isChecked === true)\r\n  //       .map((item) => item.product_id);\r\n  //     setListDelete(listId);\r\n  //   } else {\r\n  //     const rowSelection = rowData.map((item: any) =>\r\n  //       item === row ? { ...item, isChecked: checked } : item\r\n  //     );\r\n  //     setRowData(rowSelection);\r\n  //     const listId = rowSelection\r\n  //       .filter((item: any) => item?.isChecked === true)\r\n  //       .map((item) => item.product_id);\r\n  //     setListDelete(listId);\r\n  //   }\r\n  // };\r\n  return (\r\n    <div className=\"relative mt-6 overflow-x-auto shadow-md sm:rounded-lg\">\r\n      <table className=\"w-full text-left text-gray-500 dark:text-gray-400\">\r\n        <thead className=\"text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-400\">\r\n          <tr>\r\n            {/* <th scope=\"col\" className=\"text-center py-4\">\r\n              <input\r\n                name=\"checkboxall\"\r\n                checked={\r\n                  rowData.filter((item: any) => item.isChecked != true).length <\r\n                  1\r\n                }\r\n                onChange={(e) => handleChangeCheckBox(e)}\r\n                type=\"checkbox\"\r\n              />\r\n            </th> */}\r\n            {/* <th scope=\"col\" className=\"text-center py-4\">\r\n              STT\r\n            </th> */}\r\n            {columns.map((column) => (\r\n              <th\r\n                scope=\"col\"\r\n                className=\"text-center py-4\"\r\n                key={column.dataIndex}\r\n              >\r\n                {column.title}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody style={{ fontSize: \"18px\" }}>\r\n          {rowData.length == 0 ? (\r\n            <tr className=\"flex justify-end\">\r\n              <td className=\"text-red-600\">Không có bản ghi nào</td>\r\n            </tr>\r\n          ) : (\r\n            rowData.map((row: any, indx: number) => (\r\n              <tr\r\n                key={indx}\r\n                className=\"border-b bg-white hover:bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-600\"\r\n              >\r\n                {/* <td className=\"text-center py-4\">\r\n                  <input\r\n                    checked={row?.isChecked || false}\r\n                    onChange={(e) => handleChangeCheckBox(e, row)}\r\n                    type=\"checkbox\"\r\n                  />\r\n                </td> */}\r\n                {/* <td className=\"text-center py-4\">{indx + 1}</td> */}\r\n\r\n                {columns.map((column) => (\r\n                  <Fragment key={column.dataIndex}>\r\n                    <td className=\"text-center py-4\">\r\n                      {column.checkbox && (\r\n                        // <input\r\n                        //   checked={row?.isChecked || false}\r\n                        //   onChange={(e) => handleChangeCheckBox(e, row)}\r\n                        //   type=\"checkbox\"\r\n                        // />\r\n                        <Checkbox\r\n                          checked={row?.isChecked || false}\r\n                          handleChangeCheckBox={handleChangeCheckBox}\r\n                          rowData={row}\r\n                        />\r\n                      )}\r\n                      {column.dataIndex === \"index\" && indx + 1}\r\n                      {row[column.dataIndex]}\r\n                      {column.edit && (\r\n                        <button\r\n                          onClick={() => handleOpenModal(\"edit\", row)}\r\n                          className=\"mr-5 text-blue-600 dark:text-blue-500\"\r\n                        >\r\n                          <FaRegEdit />\r\n                        </button>\r\n                      )}\r\n                      {column.delete && (\r\n                        <button\r\n                          onClick={() =>\r\n                            handleOpenModalConfirm(row, \"delete_one\")\r\n                          }\r\n                          className=\"text-red-600 dark:text-red-500\"\r\n                        >\r\n                          <RiDeleteBin6Line />\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </Fragment>\r\n                ))}\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","export interface Filter {\r\n  v_Page: number;\r\n  v_Size: number;\r\n  v_Where: string;\r\n}\r\nexport const initialFilter: Filter = {\r\n  v_Page: 1,\r\n  v_Size: 5,\r\n  v_Where: \"\",\r\n};\r\n","import { HomeOutlined } from \"@ant-design/icons\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaSearch, FaRegTrashAlt } from \"react-icons/fa\";\r\nimport classNames from \"classnames\";\r\nimport { GrAdd } from \"react-icons/gr\";\r\nimport {\r\n  postProduct,\r\n  getProduct,\r\n  deleteProduct,\r\n  updateProduct,\r\n  getProductFilter,\r\n  deleteMultiple,\r\n} from \"../../Api/Product.api\";\r\nimport Modal from \"../../Components/Modal/Modal\";\r\nimport ModalConfirm from \"../../Components/Modal/ModalConfirm\";\r\nimport Pagination from \"../../Components/Pagination/Pagination\";\r\nimport { SkeletonDefault } from \"../../Components/Skeleton/Skeleton\";\r\nimport Table from \"../../Components/Table/Table\";\r\nimport { initialFilter } from \"../../Types/Filter.type\";\r\nimport { Product } from \"../../Types/Products.type\";\r\nimport { Breadcrumb, message } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { debounce } from \"../../Customs/Debounce\";\r\nimport Checkbox from \"../../Components/Input/Checkbox\";\r\nimport { rules } from \"../../Utils/Rules\";\r\nimport Input from \"../../Components/Input/Input\";\r\ntype PostProduct = Product;\r\nconst initialProduct: PostProduct = {\r\n  product_id: \"\",\r\n  product_name: \"\",\r\n  product_desc: \"\",\r\n};\r\n\r\nconst Products: React.FC = () => {\r\n  const queryClient = useQueryClient(); // làm mất hiệu lực truy vấn (invalidate Query)\r\n  const [rowData, setRowData] = useState<any>([]);\r\n  const [filter, setFilter] = useState(initialFilter);\r\n  const [formData, setFormData] = useState(initialProduct);\r\n  const [id, setId] = useState(\"\"); // sử dụng để lấy id khi click\r\n  const [confirmModal, setConfirmModal] = useState(false); // sử dụng với Modal xác nhận\r\n  const [listDelete, setListDelete] = useState<string[]>([]);\r\n  const [isModal, setIsModal] = useState({\r\n    status: \"\",\r\n    isOpenModal: false,\r\n  }); // sử dụng với Modal sửa và thêm\r\n  // Get\r\n  const getByFilter = useQuery({\r\n    staleTime: 0,\r\n    cacheTime: 5000, // thời gian bị xoá khỏi bộ nhớ\r\n    queryKey: [\"filters\", filter],\r\n    queryFn: () => getProductFilter(filter),\r\n    onSuccess: (data) => {\r\n      setRowData(data.data.recordList || []);\r\n    },\r\n    keepPreviousData: true,\r\n  });\r\n  // Post\r\n  const postProductMutation = useMutation({\r\n    mutationFn: (body: PostProduct) => {\r\n      return postProduct(body);\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: [\"filters\", filter],\r\n      });\r\n      setListDelete([]);\r\n    },\r\n  });\r\n  // Update\r\n  const updateProductMutate = useMutation({\r\n    mutationFn: (body: PostProduct) => {\r\n      return updateProduct(id, body);\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: [\"filters\", filter],\r\n      });\r\n    },\r\n  });\r\n  // Get by id\r\n  const getProductMutate = useMutation({\r\n    mutationFn: (id: string) => {\r\n      return getProduct(id);\r\n    },\r\n  });\r\n  // Delete\r\n  const deleteProductMutate = useMutation({\r\n    mutationFn: (id: string) => {\r\n      return deleteProduct(id);\r\n    },\r\n  });\r\n  // Delete Multiple\r\n  const deleteMultipleProductMutate = useMutation({\r\n    mutationFn: (listId: string[]) => {\r\n      return deleteMultiple(listId);\r\n    },\r\n  });\r\n  // Tổng trang\r\n  const totalPage = Math.ceil(\r\n    (getByFilter.data?.data.totalCount || 0) / filter.v_Size\r\n  );\r\n  // Xử lý thay đổi Input\r\n  const handleOnchangeInput = (name: any) => (e: any) => {\r\n    setFormData((prev) => ({ ...prev, [name]: e.target.value }));\r\n  };\r\n  // Xử lý mở Modal //\r\n  const handleOpenModal = (status: string, row: any) => {\r\n    if (status == \"edit\") {\r\n      getProductMutate.mutate(row.product_id, {\r\n        onSuccess: (data) => {\r\n          setFormData(data.data);\r\n        },\r\n      });\r\n      setIsModal((prev) => ({ ...prev, status: \"edit\", isOpenModal: true }));\r\n      setId(row.product_id);\r\n    }\r\n    if (status == \"create\") {\r\n      setIsModal((prev) => ({ ...prev, status: \"create\", isOpenModal: true }));\r\n    }\r\n  };\r\n  // Xửa lý đóng Modal\r\n  const handleCancelModal = () => {\r\n    setIsModal((prev) => ({ ...prev, status: \"\", isOpenModal: false }));\r\n    setFormData(initialProduct);\r\n  };\r\n  // Xử lý xác nhận (hỏi xoá) //\r\n  const handleOpenModalConfirm = (row: any, status: string) => {\r\n    if (status === \"delete_one\") {\r\n      setId(row.product_id);\r\n      setConfirmModal(true);\r\n    }\r\n    if (status === \"delete_multiple\") {\r\n      setConfirmModal(true);\r\n    }\r\n  };\r\n  // Xử lý đồng ý (xoá)\r\n  const handleAgreeModalConfirm = () => {\r\n    if (id) {\r\n      deleteProductMutate.mutate(id, {\r\n        onSuccess: (_) => {\r\n          queryClient.invalidateQueries({\r\n            queryKey: [\"filters\", filter],\r\n          });\r\n          setConfirmModal(false);\r\n          setId(\"\");\r\n          toast.success(\"Xoá thành công\");\r\n        },\r\n        onError: () => {\r\n          toast.error(\"Xoá thất bại\");\r\n        },\r\n      });\r\n    } else {\r\n      deleteMultipleProductMutate.mutate(listDelete, {\r\n        onSuccess: (_) => {\r\n          queryClient.invalidateQueries({\r\n            queryKey: [\"filters\", filter],\r\n          });\r\n          setConfirmModal(false);\r\n          setListDelete([]);\r\n          toast.success(\"Xoá thành công\");\r\n        },\r\n        onError: () => {\r\n          toast.error(\"Xoá thất bại\");\r\n        },\r\n      });\r\n    }\r\n  };\r\n  // Xử lý đóng ModalConfirm\r\n  const handleCancelModalConfirm = () => {\r\n    setConfirmModal(false);\r\n  };\r\n  // xử lý thay dổi checkbox\r\n  var handleChangeCheckBox = function (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    row: any\r\n  ) {\r\n    const { name, checked } = e.target;\r\n    if (name === \"checkboxall\") {\r\n      const rowSelection = rowData.map((item: any) => ({\r\n        ...item,\r\n        isChecked: checked,\r\n      }));\r\n      setRowData(rowSelection);\r\n      const listId = rowSelection\r\n        .filter((item: any) => item?.isChecked === true)\r\n        .map((item: any) => item.product_id);\r\n      setListDelete(listId);\r\n    } else {\r\n      const rowSelection = rowData.map((item: any) =>\r\n        item === row ? { ...item, isChecked: checked } : item\r\n      );\r\n      setRowData(rowSelection);\r\n      const listId = rowSelection\r\n        .filter((item: any) => item?.isChecked === true)\r\n        .map((item: any) => item.product_id);\r\n      setListDelete(listId);\r\n    }\r\n  };\r\n  // tìm kiếm\r\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFilter((prev: any) => ({ ...prev, v_Where: e.target.value }));\r\n  };\r\n  const onSearch = useCallback(debounce(handleSearch), []);\r\n  const columns: any[] = [\r\n    {\r\n      dataIndex: \"checkbox\",\r\n      title: (\r\n        <Checkbox\r\n          name=\"checkboxall\"\r\n          checked={\r\n            rowData.filter((item: any) => item.isChecked != true).length < 1\r\n          }\r\n          handleChangeCheckBox={handleChangeCheckBox}\r\n        />\r\n      ),\r\n      checkbox: true,\r\n    },\r\n    { dataIndex: \"index\", title: \"STT\" },\r\n    { dataIndex: \"product_name\", title: \"Tên\" },\r\n    { dataIndex: \"product_desc\", title: \"Mô tả\" },\r\n    { dataIndex: \"action\", title: \"Chức năng\", delete: true, edit: true },\r\n  ];\r\n  return (\r\n    <>\r\n      {/* ModalConfirm */}\r\n      {confirmModal && (\r\n        <ModalConfirm\r\n          question=\"Bạn có thực sự muốn xoá không?\"\r\n          handleCancelModalConfirm={handleCancelModalConfirm}\r\n          handleAgreeModalConfirm={handleAgreeModalConfirm}\r\n        ></ModalConfirm>\r\n      )}\r\n      {/* Modal  */}\r\n      {isModal.isOpenModal && (\r\n        <Modal>\r\n          <FormCRU\r\n            updateProductMutate={updateProductMutate}\r\n            setIsModal={setIsModal}\r\n            postProductMutation={postProductMutation}\r\n            handleCancelModal={handleCancelModal}\r\n            setFormData={setFormData}\r\n            formData={formData}\r\n            isModal={isModal}\r\n          ></FormCRU>\r\n        </Modal>\r\n      )}\r\n      <Breadcrumb className=\"my-5\">\r\n        <Breadcrumb.Item href=\"\">\r\n          <HomeOutlined />\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"\">\r\n          <span>Application</span>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"\">Product</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      {/* add and delete multiple */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <button\r\n            onClick={() => handleOpenModal(\"create\", \"\")}\r\n            type=\"button\"\r\n            className=\"text-blue-700 bg-gray-200 focus:outline-none focus:ring-4 focus:ring-offset-black rounded-full text-xl px-3 py-3 text-center\"\r\n          >\r\n            <GrAdd />\r\n          </button>\r\n          <button\r\n            onClick={() =>\r\n              handleOpenModalConfirm(listDelete, \"delete_multiple\")\r\n            }\r\n            type=\"button\"\r\n            className={classNames(\r\n              \"text-red-700 bg-gray-200 focus:outline-none focus:ring-4 focus:ring-offset-black rounded-full text-xl px-3 py-3 text-center\",\r\n              {\r\n                invisible: listDelete.length <= 0,\r\n              }\r\n            )}\r\n          >\r\n            <FaRegTrashAlt />\r\n          </button>\r\n        </div>\r\n        <label htmlFor=\"table-search\" className=\"sr-only\">\r\n          Search\r\n        </label>\r\n        <div className=\"relative\">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n            <FaSearch />\r\n          </div>\r\n          <input\r\n            onChange={(e) => onSearch(e)}\r\n            type=\"text\"\r\n            className=\"block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n            placeholder=\"Tìm kiếm\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* Table */}\r\n      {!getByFilter.isLoading && (\r\n        <Table\r\n          handleChangeCheckBox={handleChangeCheckBox}\r\n          handleOpenModal={handleOpenModal}\r\n          handleOpenModalConfirm={handleOpenModalConfirm}\r\n          rowData={rowData}\r\n          columns={columns}\r\n        ></Table>\r\n      )}\r\n      {/* Phân trang và fix network*/}\r\n      {!getByFilter.isLoading && (\r\n        <Pagination\r\n          page={filter.v_Page}\r\n          totalPage={totalPage}\r\n          filter={filter}\r\n          setFilter={setFilter}\r\n        ></Pagination>\r\n      )}\r\n      {getByFilter.isLoading && <SkeletonDefault />}\r\n    </>\r\n  );\r\n};\r\ninterface Props {\r\n  isModal: any;\r\n  setIsModal: any;\r\n  handleCancelModal: any;\r\n  setFormData: any;\r\n  formData: Product;\r\n  postProductMutation: any;\r\n  updateProductMutate: any;\r\n}\r\ninterface FormValidate {\r\n  product_name: string;\r\n  product_desc: string;\r\n}\r\nconst FormCRU: React.FC<Props> = ({\r\n  isModal,\r\n  setIsModal,\r\n  handleCancelModal,\r\n  setFormData,\r\n  formData,\r\n  postProductMutation,\r\n  updateProductMutate,\r\n}) => {\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormValidate>();\r\n  useEffect(() => {\r\n    if (formData) {\r\n      setValue(\"product_name\", formData.product_name);\r\n      setValue(\"product_desc\", formData.product_desc);\r\n    }\r\n  }, [formData, setValue]);\r\n  const onSubmit = (data: any) => {\r\n    if (isModal.status == \"create\") {\r\n      postProductMutation.mutate(data, {\r\n        onSuccess: () => {\r\n          setIsModal((prev: any) => ({\r\n            ...prev,\r\n            status: \"\",\r\n            isOpenModal: false,\r\n          }));\r\n          setFormData(initialProduct);\r\n          toast.success(\"Thêm thành công ❤\");\r\n        },\r\n        onError: () => {\r\n          toast.error(\"Thêm thất bại ❤\");\r\n        },\r\n      });\r\n    }\r\n    if (isModal.status == \"edit\") {\r\n      updateProductMutate.mutate(data, {\r\n        onSuccess: () => {\r\n          setIsModal((prev: any) => ({\r\n            ...prev,\r\n            status: \"\",\r\n            isOpenModal: false,\r\n          }));\r\n          setFormData(initialProduct);\r\n          toast.success(\"Cập nhập thành công\");\r\n        },\r\n        onError: () => {\r\n          toast.error(\"Cập nhập thất bại ❤\");\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3 text-center sm:mt-0 justify-around sm:text-left\">\r\n      <h1\r\n        className=\"text-2xl font-medium leading-6 text-gray-900 mb-5\"\r\n        id=\"modal-title\"\r\n      >\r\n        {isModal.status == \"edit\" ? \"Edit\" : \"Thêm\"}\r\n      </h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"w-full flex items-center mb-5\">\r\n          <Input\r\n            label=\"Tên\"\r\n            name=\"product_name\"\r\n            type=\"text\"\r\n            placeholder=\"Tên\"\r\n            className=\"bg-gray-50 border border-gray-300 block w-2/3 text-gray-900 text-sm rounded-lg p-2.5\"\r\n            register={{ ...register(\"product_name\", rules.product_name) }}\r\n            errorMessage={errors.product_name?.message}\r\n          ></Input>\r\n          <Input\r\n            label=\"Mô tả\"\r\n            name=\"product_desc\"\r\n            type=\"text\"\r\n            placeholder=\"Mô tả\"\r\n            className=\"bg-gray-50 border border-gray-300 block w-2/3 text-gray-900 text-sm rounded-lg p-2.5\"\r\n            register={{ ...register(\"product_desc\", rules.notRequired) }}\r\n          ></Input>\r\n        </div>\r\n        <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"inline-flex w-full justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm\"\r\n          >\r\n            Ok\r\n          </button>\r\n          <button\r\n            onClick={() => handleCancelModal()}\r\n            className=\"mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Products;\r\n","import { Filter } from \"../Types/Filter.type\";\r\nimport { Product } from \"../Types/Products.type\";\r\nimport http from \"../Utils/Http\";\r\n// api get\r\nexport const getProducts = () => http.get<Product[]>(\"Product\");\r\n// api post\r\nexport const postProduct = (product: Omit<Product, \"product_id\">) =>\r\n  http.post<Product[]>(\"Product\", product);\r\n// api get\r\nexport const getProduct = (id: string) => http.get<Product>(`Product/${id}`);\r\n// api delete\r\nexport const deleteProduct = (id: string) => http.delete(`Product/${id}`);\r\n// api put\r\nexport const updateProduct = (id: string, product: Product) =>\r\n  http.put<Product[]>(`Product/${id}`, product);\r\n// api post\r\nexport const getProductFilter = (filter: Filter) =>\r\n  http.post(\"Product/fitter\", filter);\r\n// api xoá nhiều\r\nexport const deleteMultiple = (listId: string[]) =>\r\n  http.post(\"Product/bulk_delete\", listId);\r\n// , {\r\n//   params: {\r\n//     _page: page,\r\n//     _limit: limit,\r\n//   },\r\n// }\r\n","export const debounce = (func: any) => {\r\n  let time: any;\r\n  return function (this: any, ...args: any) {\r\n    let context = this;\r\n    if (time) {\r\n      clearTimeout(time);\r\n    }\r\n    time = setTimeout(() => {\r\n      time = null;\r\n      func.apply(context, args);\r\n    }, 1000);\r\n  };\r\n};\r\n"],"names":["children","className","role","handleAgreeModalConfirm","handleCancelModalConfirm","question","onClick","e","limit","totalPage","page","filter","setFilter","arrPage","Array","fill","forEach","_","indx","push","arrPageNew","slice","prev","v_Page","map","pageNumber","handleChangePage","onChange","v_Size","target","value","handleChangeLimit","id","style","margin","SkeletonDefault","name","checked","rowData","handleChangeCheckBox","type","columns","handleOpenModalConfirm","handleOpenModal","column","scope","title","dataIndex","fontSize","length","row","Fragment","checkbox","isChecked","edit","delete","initialFilter","v_Where","initialProduct","product_id","product_name","product_desc","FormCRU","isModal","setIsModal","handleCancelModal","setFormData","formData","postProductMutation","updateProductMutate","useForm","register","setValue","handleSubmit","errors","formState","useEffect","status","onSubmit","data","mutate","onSuccess","isOpenModal","toast","onError","Input","label","placeholder","rules","errorMessage","message","queryClient","useQueryClient","useState","setRowData","setId","confirmModal","setConfirmModal","listDelete","setListDelete","getByFilter","useQuery","staleTime","cacheTime","queryKey","queryFn","http","getProductFilter","recordList","keepPreviousData","useMutation","mutationFn","body","product","invalidateQueries","updateProduct","getProductMutate","getProduct","deleteProductMutate","deleteProduct","deleteMultipleProductMutate","listId","deleteMultiple","Math","ceil","totalCount","rowSelection","item","onSearch","useCallback","func","time","args","context","this","clearTimeout","setTimeout","apply","debounce","href","HomeOutlined","classNames","invisible","htmlFor","isLoading"],"sourceRoot":""}